Welcome to the Python-tutorial wiki!

Arthur : Vignesh
Python is an most powerful programming language and it is open source In industries most codes are written in python2 The best versions of python is pyhon-2.7 Because it was compatible with all python2 codes and with much of pyhon3 syntax

You can download python source code in : https://www.python.org/ You can practice python in Jupyner notbook : http://jupyter.org/

Downloading Python in Linux ( Cent-OS ):
By default Python2 was available on linux to check use cmd : $python --version

To run python we need some dependency so install that by using cmd : yum group install development tools Download the pyhon source code Go to the downloaded path and extract the tar file the run the file (./config), make install

Note : Python files should save as .py extension but no need to worry that in linux, linux can run all executable files, for our reference we can save with .py or any identifiable name.

Let's see basics of Pyton:
Variables
Strings
String formatting
Built-in-function
Introduction to OOP
Methods
Variables
Variable is used as an storage location We can store any name or value in variable

Variable has some rules as below:
Variables are case-sensitive # name=xxx, Name=xxx ( here name is one variable and Name is another variable) Variables should start with letter but it can have names # Name=vignesh7323 ( variable is Name and value is vignesh7323) Underscores are allowed in variable # _name=xxx ( valid variable ) +,- are not allowed in variable # +name or -name ( not valid )

Some valid variable names are below:
first3letters='ABC' First_three_letters='ABC' firstThreeLetters='ABC'

Name='Vicky' # Vicky was stored in the variable Name print(Name) #o/p -> Vicky print('Name') #o/p -> Name ( it will print the string mentioned inside '' )

String:
In Python string should be surrounded by quotes # 'String' or "String" Fruit="Apple" Fruit='Apple' Why and where we use '' and "" Eg : 'she said."This is great"' "That is great"

Indexing:
String=VICKY 0=V 1=I C=2 K=3 K=4 Y=5 V index is 0 I index is 1 .......

print(string[0]) # o/p -> V

String: a p p l e Index : 0 1 2 3 4 a = 'apple'[0] e = 'apple'[4]

Function:
It is an Section of code that can be reused in program A function is an name that can be called or can be executed by that name Example print() function can print string len() function can count the number of letters in the string Eg : name=vicky print(len(name)) o/p -> 5 # count the string and gives the output

Basic OOP
1.Everything in Python is an object
2.Every object has a type
3.'apple' is an object of type "str"
4.'apple' is a string object
5.fruit = 'apple' # fruit is a string object
6.Methods are functions run against an object
The lower() String Method
It will convert the string into lower string Eg : name= 'Vicky' print(name.lower()) -> O/p : vicky # V is converted to lower string as v

The upper() String Method # Same as above it will convert the lower string into upper string

String Concatenation
Combining strings
Eg : print('I ' + 'love ' + 'India.') # O/P -> I love India.

first="I"

second = 'love'

third = 'India'

sentence = first + ' ' + second + ' ' + third + '.'

print(sentence) # o/p -> I love India .

Repeating Strings
It will repeat the string

Eg : name= 'Vicky' * 3

 print(name)  # O/P - > Vicky Vicky Vicky
The str() Function
It will convert the data into string format

Eg : age = 23

 print('I am vikcy and my age is ' + str(age) + '.') # o/p -> I am vikcy and my age is 23
Here the integer is 23 but the str() converted the integer into string format

Formatting Strings
Python uses C-style string formatting to create new, formatted strings

Eg : print('I {0} {1}. {1} {0}s me.'.format('love', 'Python')) # {0} refers to 'love and {1} refers to Python
O/P -> I love Python. Python loves me.

Formatting Strings Alignment
< Left

^ Center

Right

Formatting Strings - Data Types
f Float

.Nf N = The number of decimal places

Getting User Input
Get the users input input() Accepts Standard Input

Eg : Name=input('enter your name:')

print(Name) #O/P -> enter your name:vignesh

                vignesh
Simple calculator program:
def calculator():

a=int(input('Enter first number: '))

b=int(input('Enter second number: '))

choice=input('Enter your choice(1=add,2=sub,3=mul,4=div):')

print('your choice is',choice)

if choice == '1':

    print('result of add is',int(a)+int(b))

elif choice == '2':

    print('result of sub is',int(a)-int(b))

elif choice == '3':

    print('result of mul is',int(a)*int(b))

elif choice == '4':

    print('result of div is',int(a)/int(b))

else:

    print("Invalid Input")
calculator()

Operators:
Booleans
Comparators
Order of operations
Code blocks
Conditionals
Boolean:

While assigning boolean to a variable don't mention quotes ''

Since quotes are used to mention string

Eg : a_boolean = True

 Other_boolean = False

 print(a_boolean)

 print(Other_boolean)

 O/p -> True

        False
comparators
Operator Description

== Equal to

          Greater than
= Greater than or equal to

< Less than

<= Less than or equal to

!= Not equal

Boolean operators
and -> Evaluates to True if both statements are True otherwise evaluates to False

or -> Evaluates to True if either of the statements is True

not -> Evaluates to the opposite of the statements

Truth table
True and True = True

True and False = False

False and True = False

False and False = False

True or False = True

False or True = True

False or False = False

Conditionals:
if 37<40: #boolean is true

print('Thirty-seven is less than Forty') # Execute the print statement

print('Have a nice day') # This print statement will also print because it was outside the function


